# -*- coding: utf-8 -*-
"""Copy of Stat_220_HW1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qQMU2U_Vg3IxzurhORXJPr4eAmJxRRzy

[![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/drbob-richardson/stat220/blob/main/Assignments/Stat_220_HW1.ipynb)

**Problem 1**. Give an example of a variable that is (a) categorical; (b) quantitative; (c) discrete; (d) continuous.

**Problem 2**. Analyze the Carbon_West data file using the following code.
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
carbon_west = pd.read_csv("https://stat4ds.rwth-aachen.de/data/Carbon_West.dat", delim_whitespace=True)
print(carbon_west)



"""Part a. Construct a histogram of CO2 emissions."""

plt.figure(figsize=(8,4))
plt.hist(carbon_west["CO2"], bins=17 , edgecolor='black')
plt.title(f'Histogram of CO2 Emissions')
plt.xlabel("Nation")
plt.ylabel('Emissions')
plt.show()

"""Part b. Find the mean, median, and standard deviation."""

# Calculate mean, median, and standard deviation
mean_value = np.mean(carbon_west["CO2"])
median_value = np.median(carbon_west["CO2"])
std_deviation = np.std(carbon_west["CO2"])
variance = np.var(carbon_west["CO2"])

# Display the results
print(f"Mean: {mean_value}")
print(f"Median: {median_value}")
print(f"Standard Deviation: {std_deviation}")
print(f"Variance: {variance}")

"""**Problem 3**. Read in the murder data set using the following code. The variable murder is the murder rate (per 100,000 population) for each state in the U.S. in 2017 according to the FBI Uniform Crime Reports. At first, do not use the observation for D.C. (DC)."""

murders = pd.read_csv("https://stat4ds.rwth-aachen.de/data/Murder.dat", delim_whitespace=True)
#show read in data
print(murders)

"""Part a. Find the mean and standard deviation for murders without D.C."""

murders_noDC = murders[murders['state'] != "DC"]

# Calculate mean, median, and standard deviation
mean_value = np.mean(murders_noDC ["murder"])
median_value = np.median(murders_noDC ["murder"])
std_deviation = np.std(murders_noDC ["murder"])
variance = np.var(murders_noDC ["murder"])

# Display the results
print(f"Mean: {mean_value}")
print(f"Median: {median_value}")
print(f"Standard Deviation: {std_deviation}")
print(f"Variance: {variance}")

"""Part b. Find the five-number  summary without D.C."""

minimum = np.min(murders_noDC["murder"])
q1 = np.percentile(murders_noDC["murder"], 25)
median = np.median(murders_noDC["murder"])
q3 = np.percentile(murders_noDC["murder"], 75)
maximum = np.max(murders_noDC["murder"])

# Display the five-number summary
print(f"Minimum: {minimum}")
print(f"1st Quartile (Q1): {q1}")
print(f"Median (Q2): {median}")
print(f"3rd Quartile (Q3): {q3}")
print(f"Maximum: {maximum}")

"""Part c. Now include the observation for D.C. and recalculate the mean, median, and five-number summary. What is affected more by this outlier: The mean or the median? The range or the inter-quartile range?"""

# Calculate mean, median, and standard deviation
mean_value = np.mean(murders ["murder"])
median_value = np.median(murders ["murder"])
std_deviation = np.std(murders ["murder"])
variance = np.var(murders ["murder"])

# Display the results
print(f"Mean: {mean_value}")
print(f"Median: {median_value}")
print(f"Standard Deviation: {std_deviation}")
print(f"Variance: {variance}")

#The mean had a larger fluctution than the median due to the outlier.
#The IQR aslo had a slightlty larger fluctution compared to the reg range.

minimum = np.min(murders["murder"])
q1 = np.percentile(murders["murder"], 25)
median = np.median(murders["murder"])
q3 = np.percentile(murders["murder"], 75)
maximum = np.max(murders["murder"])

# Display the five-number summary
print(f"Minimum: {minimum}")
print(f"1st Quartile (Q1): {q1}")
print(f"Median (Q2): {median}")
print(f"3rd Quartile (Q3): {q3}")
print(f"Maximum: {maximum}")

"""**Problem 4**. Read in the Houses data file using the following code.  The variables include price (thousands of dollars), size (square feet), tax bill (dollars), number of bathrooms, number of bedrooms, and whether the house is new (1 = yes, 0 = no) for 100 home sales in Gainesville, Florida. Let
y = selling price and x = size of home.
"""

houses = pd.read_csv("https://stat4ds.rwth-aachen.de/data/Houses.dat" , delim_whitespace=True)
print(houses)

"""Part a. Construct a scatterplot between square feet and price of a home."""



"""Part b. Find the correlation between the two variables."""

plt.scatter(houses['size'], houses['price'])
plt.xlabel('Size')
plt.ylabel('Price')
plt.title('Scatter Plot of Size vs Price')
plt.show()

"""Part c. Find and plot the regression line on top of the scatterplot."""

plt.scatter(houses['size'], houses['price'])
plt.xlabel('Size')
plt.ylabel('Price')
plt.title('Scatter Plot of Size vs Price')
m, b = np.polyfit(houses['size'], houses['price'],1)
plt.plot(houses['size'], m * houses['size'] + b, color='red')

"""Part d. Create a side by side boxplot of price comparing homes that are new and homes that are not new."""

new_houses = houses[houses['new'] == 1]['price']
not_new_houses = houses[houses['new'] == 0]['price']
plt.boxplot([new_houses, not_new_houses], labels=['New', 'Not New'])
plt.ylabel('Price')
plt.title('Side-by-Side Boxplot of Price for New and Not New Houses')
plt.show()

"""Part e. What is the relationship between size and price.  Justify your answer using the plots created. Do the same for the relationship between price and whether or not a house is new, again using the plot to justify your answer.

**Problem 5**. Using the Happy data file read in by the following code. Construct the contingency table relating marital status and happiness.
"""

happy = pd.read_csv("https://stat4ds.rwth-aachen.de/data/Happy.dat" , delim_whitespace=True)
print(happy)

contingency_table = pd.crosstab(happy['marital'], happy['happiness'])
print(contingency_table)